on:
  workflow_dispatch: {}
  pull_request: {}
  push:
    branches:
    - main
    - master
    - release/*
    paths:
    - .github/workflows/test.yml
  schedule:
  # random HH:MM to avoid a load spike on GitHub Actions at 00:00
  - cron: 51 23 * * *
name: Semgrep
jobs:
  semgrep:
    name: semgrep/ci
    runs-on: ubuntu-20.04
    env:
      SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
    container:
      image: returntocorp/semgrep
    steps:
    - uses: actions/checkout@v4
    - run: semgrep ci

  Checkout:
    needs: semgrep 
    name: Checkout
    runs-on: ubuntu-20.04
    steps:
     - uses: actions/checkout@v4.2.2
  #
  Jscrambler:
      needs: Checkov
      runs-on: ubuntu-latest
      
      permissions:
        contents: read
      strategy:
        matrix:
          node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

      steps:
        - uses: actions/checkout@v4
          name: Use Node.js ${{ matrix.node-version }}
        - uses: actions/setup-node@v4
          with:
            node-version: ${{ matrix.node-version }}
            cache: 'npm'
            paths: '/components/yarn.lock'
        - run: npm ci
        - run: npm run build --if-present
        - run: npm test
        - name: Jscrambler Code Integrity
          id: jscrambler
          # the complete list of inputs can be found here: https://github.com/marketplace/actions/jscrambler#inputs
          uses: jscrambler/code-integrity-actions/protect@ab65962a2ecffcc362b75a997e24a181d0bde5fb
          with:
            application-id: ${{ secrets.JSCRAMBLER_APPLICATION_ID }}  # This value should be created within your Jscrambler account
            secret-key: ${{ secrets.JSCRAMBLER_SECRET_KEY }}          # This value can be found in your Jscrambler account
            access-key: ${{ secrets.JSCRAMBLER_ACCESS_KEY }}          # This value can be found in your Jscrambler account
            jscrambler-config-path: jscrambler.json                   # Download from your Jscrambler account
            files-src: |                                              # List of Files to be protected
              dist/**/*
            files-dest: .
  #
  Python-package:
      #needs: Jscrambler
      needs: Checkov
      runs-on: ubuntu-latest
      strategy:
        fail-fast: false
        matrix:
           python-version: ["3.9", "3.10", "3.13"]

      steps:
        - uses: actions/checkout@v4
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v3
          with:
            python-version: ${{ matrix.python-version }}
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            python -m pip install flake8 pytest
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        - name: Lint with flake8
          run: |
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        - name: Test with pytest
          run: |
            pytest
#
  Python-test:
    #needs: Python-package
    needs: Checkov
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.13]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        python manage.py test
# Запуск тестов Django      
  
  Testing:
      #needs: Python-test
      needs: Checkov
      runs-on: ubuntu-latest

      steps:
       - name: Checkout Repo
         uses: actions/checkout@v2

       - name: Run pytest (pytest-django)
         env:
           PYTHONPATH: webapp/src/
         uses: samwlms/pytest-django-action@1.9
         with:
            args: pytest --ds=webapp.settings_prod -o python_files=tests.py -o django_find_project=false
       
# Статический анализ безопасности с помощью Checkov GitHub Action
  Checkov:
      needs: Checkout
      runs-on: ubuntu-latest
      steps:
       - uses: actions/checkout@v4
       - name: Set up Python 3.8
         uses: actions/setup-python@v4
         with:
           python-version: 3.8
       - name: Test with Checkov
         id: checkov
         uses: bridgecrewio/checkov-action@master
         with:
          directory: example/examplea
          framework: terraform 
 


